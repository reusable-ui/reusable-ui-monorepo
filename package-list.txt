// Reusable-ui configs:
@reusable-ui/colors
@reusable-ui/borders
@reusable-ui/spacers
@reusable-ui/breakpoints
@reusable-ui/typos

// Reusable-ui utilities:
@reusable-ui/numbers
@reusable-ui/nodes
@reusable-ui/resets
@reusable-ui/stripouts      DEPRECATED
@reusable-ui/layouts        DEPRECATED
@reusable-ui/runtime-checks
@reusable-ui/callbacks                  deps: none, foundational for stable API functions.
@reusable-ui/lifecycles                 deps: none, lifecycle-related hooks.
@reusable-ui/styles                     deps: none, manages styling utilities.
@reusable-ui/references                 deps: @reusable-ui/callbacks (for stable API functions).
@reusable-ui/directionality             deps: @reusable-ui/lifecycles (depends on lifecycle updates).
@reusable-ui/timers                     deps: none, **likely to use @reusable-ui/lifecycles later** for cleanup.
@reusable-ui/events                     deps: @reusable-ui/callbacks, @reusable-ui/lifecycles, **likely to use @reusable-ui/timers later** for delay management.
@reusable-ui/hooks          DEPRECATED
@reusable-ui/semantics
@reusable-ui/accessibilities
@reusable-ui/validations
@reusable-ui/focuses
@reusable-ui/link-compat
@reusable-ui/next-link-compat
@reusable-ui/router-link-compat
@reusable-ui/links
@reusable-ui/client-sides   DEPRECATED
@reusable-ui/navigations

// Reusable-ui variants: (refactored):
@reusable-ui/orientation-variant
@reusable-ui/flow-direction-variant
@reusable-ui/size-variant
@reusable-ui/theme-variant
@reusable-ui/emphasis-variant
@reusable-ui/outline-variant
@reusable-ui/mild-variant
@reusable-ui/bare-variant
@reusable-ui/styling-variants

// Reusable-ui variants: (planned):
|-----------------------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
|  Interface Name             |  Prop Name      |  Values                          |  Inherit  |  Invert  |  Hook Default  |  System Default  |  Description                                                  |
|-----------------------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| Layout Variants: -----------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| OrientationVariantProps     | orientation     | inline, block                    |    Yes    |   Yes    |     block      |      block       | Controls horizontal/vertical orientation                      |
| FlowDirectionVariantProps   | flowDirection   | start, end                       |    Yes    |   Yes    |      end       |       end        | Controls the direction on main axis                           |
| BareVariantProps            | bare            | boolean                          |    No     |   N/A    |     false      |       N/A        | Strips padding, background, border — minimal appearance       |
|-----------------------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| Styling Variants: ----------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| SizeVariantProps            | size            | sm, md, lg, custom               |    Yes    |          |    inherit     |        md        | Sets component sizing, including custom token or value        |
| ThemeVariantProps           | theme           | primary, secondary, ..., custom  |    Yes    |          |    inherit     |     primary      | Applies themed visual identity from palette or context        |
| EmphasizeVariantProps       | emphasized      | boolean                          |    Yes    |   Yes    |    inherit     |      false       | Enables gradient background styling                           |
| OutlineVariantProps         | outlined        | boolean                          |    Yes    |   Yes    |    inherit     |      false       | Enables outlined style (border-only, no fill)                 |
| MildVariantProps            | mild            | boolean                          |    Yes    |   Yes    |    inherit     |      false       | Enables soft-tone background styling                          |
|-----------------------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| Utilities: -----------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|
| StylingVariantsProps        | (extends above) | (all styling variants unified)   |     -     |          |                |                  | Provides bundled variant props for common component usage     |
| ColorVariantUtils (utility) | (varies)        | (computed from theme or context) |     -     |          |                |                  | Provides contextual text and icon coloring behavior           |
|-----------------------------|-----------------|----------------------------------|-----------|----------|----------------|------------------|---------------------------------------------------------------|


|------------------------|-----------------------------|-----------------|--------------------------|-----------------------------------------------------|----------|
| Package Name           | Main Interface              | Main Prop       | Classname                | Reason for Base Form or `-ed`                       | Verify   |
|------------------------|-----------------------------|-----------------|--------------------------|-----------------------------------------------------|----------|
| orientation-variant    | `OrientationVariantProps`   | `orientation`   | `orientationClassname`   | ✅ Base form: describes axis, not condition         | VERIFIED |
| flow-direction-variant | `FlowDirectionVariantProps` | `flowDirection` | `flowDirectionClassname` | ✅ Base form: matches CSS `flex-direction` idiom    | VERIFIED |
| size-variant           | `SizeVariantProps`          | `size`          | `sizeClassname`          | ✅ Base form: declarative sizing (`sm`, `lg`, etc.) | VERIFIED |
| theme-variant          | `ThemeVariantProps`         | `theme`         | `themeClassname`         | ✅ Base form: matches design system conventions     | VERIFIED |
| emphasis-variant       | `EmphasisVariantProps`      | `emphasis`      | `emphasisClassname`      | ✅ Noun form: declarative styling intent            | Should be `<Component emphasis />` (emphasis is a pure noun) |
| outline-variant        | `OutlineVariantProps`       | `outline`       | `outlineClassname`       | ✅ Base form: matches common UI idioms              | Should be `<Component outline />` (outline is a noun in the context (styling intent)) |
| mild-variant           | `MildVariantProps`          | `mild`          | `mildClassname`          | ✅ Base form: emotionally descriptive styling       | VERIFIED |
| bare-variant           | `BareVariantProps`          | `bare`          | `bareClassname`          | ✅ Base form: minimalist styling intent             | VERIFIED |
|------------------------|-----------------------------|-----------------|--------------------------|-----------------------------------------------------|----------|


Default inheritance case example:
```tsx
<Group orientation='inline' size='lg' theme='primary' gradient outlined mild>
    {/* default props: size='inherit' theme='inherit' gradient='inherit' outlined='inherit' mild='inherit' */}
    <Label>Quantity:</Label>
    <Button>➖</Button>
    <Input />
    <Button>➕</Button>
    
    <Label>Stock level:</Label>
    
    {/* default prop for orientation is static to inline or block, depends on component's default, except if explicity set to inherit */}
    <Progress>
        <ProgressBar value={70}>Ready</ProgressBar>
        <ProgressBar value={5}>Broken</ProgressBar>
    </Progress>
</Group>
```

// Reusable-ui variants (deprecated):
@reusable-ui/orientationable    DEPRECATED
@reusable-ui/resizable          DEPRECATED
@reusable-ui/themeable          DEPRECATED
@reusable-ui/gradientable       DEPRECATED
@reusable-ui/outlineable        DEPRECATED
@reusable-ui/mildable           DEPRECATED
@reusable-ui/nudible            DEPRECATED
@reusable-ui/basic-variants     DEPRECATED

// Reusable-ui features:
@reusable-ui/background-feature
@reusable-ui/foreground-feature
@reusable-ui/decoration-feature
@reusable-ui/border-feature
@reusable-ui/ring-feature
@reusable-ui/padding-feature
@reusable-ui/animation-feature
@reusable-ui/filter-feature
@reusable-ui/transform-feature
@reusable-ui/box-shadow-feature
@reusable-ui/background         DEPRECATED
@reusable-ui/foreground         DEPRECATED
@reusable-ui/colorable          DEPRECATED
@reusable-ui/border             DEPRECATED
@reusable-ui/ring               DEPRECATED
@reusable-ui/padding            DEPRECATED
@reusable-ui/animation          DEPRECATED

|----------------|----------------------|--------------------|-----------|-----------|--------|-------------------|---------------------|--------------------------|--------------|-----------------------------|------------------|-----------------------------------------|
| State Role     | Behavior             | Main Interface     | Main Prop | 'inherit' | 'auto' | Classname Prop    | Resolved States     | Transitioning States     | Controllable | Uncontrollable              | Updates          | onChange                                |
|----------------|----------------------|--------------------|-----------|-----------|--------|-------------------|---------------------|--------------------------|--------------|-----------------------------|------------------|-----------------------------------------|
| excite-state   | Continuous animation | ExciteStateProps   | excited   | No        |        | exciteClassname   | excited             | none                     | Yes          | No — notification only      | via animationend | Yes — user has been notified to respond |
| collapse-state | Animates transitions | CollapseStateProps | expanded  | No        |        | expandClassname   | collapsed, expanded | collapsing, expanding    | Yes          | Yes — memoize user's intent | via dispatch     | Yes — user toggles via UI               |
| active-state   | Animates transitions | ActiveStateProps   | active    | Yes       |        | activeClassname   | inactive, active    | deactivating, activating | Yes          | Yes — memoize user's intent | via dispatch     | Yes — user toggles via UI               |
|----------------|----------------------|--------------------|-----------|-----------|--------|-------------------|---------------------|--------------------------|--------------|-----------------------------|------------------|-----------------------------------------|
| disable-state  | Animates transitions | DisableStateProps  | disabled  | Yes       |        | disableClassname  | disabled, enabled   | disabling, enabling      | Yes          | No — indicator only         | via 'inherit'    | No — indicator only                     |
| focus-state    | Animates transitions | FocusStateProps    | focused   | No        | Yes    | focusClassname    | blurred, focused    | focusing, blurring       | Yes          | No — indicator only         | via 'auto'       | No — indicator only                     |
| hover-state    | Animates transitions | HoverStateProps    | hovered   | No        | Yes    | hoverClassname    | leaved, hovered     | leaving, hovering        | Yes          | No — indicator only         | via 'auto'       | No — indicator only                     |
| press-state    | Animates transitions | PressStateProps    | pressed   | No        | Yes    | pressClassname    | released, pressed   | pressing, releasing      | Yes          | No — indicator only         | via 'auto'       | No — indicator only                     |
| validity-state | Animates transitions | ValidityStateProps | invalid   | Yes       | Yes    | validityClassname | invalid, valid      | invalidating, validating | Yes          | No — notification only      | via 'auto'       | Yes — user expected to revise           |
|----------------|----------------------|--------------------|-----------|-----------|--------|-------------------|---------------------|--------------------------|--------------|-----------------------------|------------------|-----------------------------------------|

Additional flags:
- active-state: aria-checked, aria-pressed, aria-selected, aria-current, aria-activedescendant
- disabled-state: aria-disabled

|----------------|---------------------|--------------------------------|-----------------------------|----------------------------|
| State Package  | Resolve Final State | Uncontrollable                 | Dispatcher                  | Resolve Final State + Meta |
|----------------|---------------------|--------------------------------|-----------------------------|----------------------------|
| excite-state   | useExciteState      | not applicable                 | not applicable              | useExciteBehaviorState     |
| collapse-state | useCollapseState    | useUncontrollableCollapseState | useCollapseChangeDispatcher | useCollapseBehaviorState   |
| active-state   | useActiveState      | useUncontrollableActiveState   | useActiveChangeDispatcher   | useActiveBehaviorState     |
|----------------|---------------------|--------------------------------|-----------------------------|----------------------------|
| disable-state  | useDisableState     | not applicable                 | not applicable              | useDisableBehaviorState    |
| focus-state    | useFocusState       | not applicable                 | not applicable              | useFocusBehaviorState      |
| hover-state    | useHoverState       | not applicable                 | not applicable              | useHoverBehaviorState      |
| press-state    | usePressState       | not applicable                 | not applicable              | usePressBehaviorState      |
| validity-state | useValidityState    | not applicable                 | not applicable              | useValidityBehaviorState   |
|----------------|---------------------|--------------------------------|-----------------------------|----------------------------|


|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|
| Package Name               | Purpose      | Main Interface              | Main Prop     | Classname Prop         | Resolved States              | Transitioning States             | Reason for Base Form or `-ed`                                      | Verify   |
|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|
| excite-state               | notification | `ExciteStateProps`          | `excited`     | `exciteClassname`      | —                            | —                                | ❌ Base form: reflects emotional trigger, not static condition     | VERIFIED |
|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|
| collapse-state             | control      | `CollapseStateProps`        | `expanded`    | `expandClassname`      | `collapsed`, `expanded`      | `collapsing`, `expanding`        | ❌ Base form: domain is “collapse”, resolved states are adjectives | VERIFIED |
| active-state               | control      | `ActiveStateProps`          | `active`      | `activeClassname`      | `inactive`, `active`         | `deactivating`, `activating`     | ❌ Base form: behavioral toggle, matches React idiom | VERIFIED    |          |
|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|
| disabled-state             | constraint   | `DisabledStateProps`        | `disabled`    | `disabledClassname`    | `disabled`, `enabled`        | `disabling`, `enabling`          | ✅ `-ed` form: reflects diagnostic condition, matches HTML/ARIA    |          |
| read-only-state            | constraint   | `ReadOnlyStateProps`        | `readOnly`    | `readOnlyClassname`    | `readonly`, `writable`       | `thawing`, `freezing`            | ✅ `-only` form: reflects diagnostic condition, matches HTML/ARIA  | VERIFIED |
|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|
| focus-state                | indicator    | `FocusStateProps`           | `focused`     | `focusClassname`       | `blurred`, `focused`         | `focusing`, `blurring`           | ✅ `-ed` form: reflects visual condition, idiomatic in JS/DOM      | VERIFIED |
| hover-state                | indicator    | `HoverStateProps`           | `hovered`     | `hoverClassname`       | `leaved`, `hovered`          | `leaving`, `hovering`            | ✅ `-ed` form: reflects pointer condition, idiomatic in CSS        | VERIFIED |
| press-state                | indicator    | `PressStateProps`           | `pressed`     | `pressClassname`       | `released`, `pressed`        | `pressing`, `releasing`          | ✅ `-ed` form: reflects interaction condition, idiomatic in UI     | VERIFIED |
| validity-state             | diagnostic   | `ValidityStateProps`        | `validity`    | `validityClassname`    | `invalid`, `valid`           | `invalidating`, `validating`     | ❌ Noun form: diagnostic domain, resolved states are adjectives    | VERIFIED |
|----------------------------|--------------|-----------------------------|---------------|------------------------|------------------------------|----------------------------------|--------------------------------------------------------------------|----------|


// Reusable-ui states:
@reusable-ui/animation-state
@reusable-ui/animating-state DEPRECATED
@reusable-ui/excite-state
@reusable-ui/collapse-state
@reusable-ui/active-state
@reusable-ui/validity-state
@reusable-ui/disabled-state
@reusable-ui/read-only-state
@reusable-ui/excitable
@reusable-ui/collapsible
@reusable-ui/scrollable
@reusable-ui/disableable
@reusable-ui/activatable
@reusable-ui/focusable
@reusable-ui/interactable
@reusable-ui/clickable
@reusable-ui/active-as-click
@reusable-ui/invalidable
@reusable-ui/checkable
@reusable-ui/validation-icon

// Reusable-ui capabilities:
@reusable-ui/floatable
@reusable-ui/global-stackable
@reusable-ui/auto-focusable
@reusable-ui/groupable
@reusable-ui/pointer-capturable

@reusable-ui/core

// supports:
@reusable-ui/react-router-compat-link
@reusable-ui/next-compat-link

// base-components:
@reusable-ui/generic
@reusable-ui/basic
@reusable-ui/indicator
@reusable-ui/control
@reusable-ui/action-control
@reusable-ui/editable-control
@reusable-ui/editable-text-control   *icon
@reusable-ui/editable-action-control

// base-content-components:
@reusable-ui/container
@reusable-ui/content    *button

// simple-components:
@reusable-ui/icon
@reusable-ui/label
@reusable-ui/button
@reusable-ui/toggle-button
@reusable-ui/nav-button
@reusable-ui/button-icon
@reusable-ui/close-button
@reusable-ui/hamburger-menu-button

// editor-components:
@reusable-ui/editable-button
@reusable-ui/form
@reusable-ui/input
@reusable-ui/range
@reusable-ui/check
@reusable-ui/radio

// layout-components:
@reusable-ui/list
@reusable-ui/card
@reusable-ui/masonry

// status-components:
@reusable-ui/popup
@reusable-ui/badge
@reusable-ui/busy

// notification-components:
@reusable-ui/alert
@reusable-ui/tooltip

// menu-components:
@reusable-ui/collapse
@reusable-ui/dropdown
@reusable-ui/dropdown-button
@reusable-ui/dropdown-list
@reusable-ui/dropdown-list-button

// dialog-components:
@reusable-ui/modal
@reusable-ui/modal-card
@reusable-ui/modal-side

// composite-components:
@reusable-ui/progress
@reusable-ui/group
@reusable-ui/nav
@reusable-ui/navscroll
@reusable-ui/pagination
@reusable-ui/accordion
@reusable-ui/exclusive-accordion
@reusable-ui/tab
@reusable-ui/carousel
@reusable-ui/navbar
@reusable-ui/details

// utility-components:
@reusable-ui/visually-hidden
@reusable-ui/dimensions
@reusable-ui/responsives
@reusable-ui/modal-status
@reusable-ui/dialog-message

@reusable-ui/components
